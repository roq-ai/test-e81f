generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model company {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description String?  @db.VarChar(255)
  image       String?  @db.VarChar(255)
  name        String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  user_id     String   @db.Uuid
  tenant_id   String   @db.VarChar(255)
  user        user     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model performance_evaluation {
  id                                                 String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  evaluation_date                                    DateTime @db.Date
  rating                                             Int
  comments                                           String?  @db.VarChar(255)
  hr_specialist_id                                   String   @db.Uuid
  team_member_id                                     String   @db.Uuid
  created_at                                         DateTime @default(now()) @db.Timestamp(6)
  updated_at                                         DateTime @default(now()) @db.Timestamp(6)
  user_performance_evaluation_hr_specialist_idTouser user     @relation("performance_evaluation_hr_specialist_idTouser", fields: [hr_specialist_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_performance_evaluation_team_member_idTouser   user     @relation("performance_evaluation_team_member_idTouser", fields: [team_member_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model task {
  id                                    String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  title                                 String       @db.VarChar(255)
  description                           String?      @db.VarChar(255)
  department_manager_id                 String       @db.Uuid
  team_member_id                        String       @db.Uuid
  created_at                            DateTime     @default(now()) @db.Timestamp(6)
  updated_at                            DateTime     @default(now()) @db.Timestamp(6)
  user_task_department_manager_idTouser user         @relation("task_department_manager_idTouser", fields: [department_manager_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user_task_team_member_idTouser        user         @relation("task_team_member_idTouser", fields: [team_member_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  time_entry                            time_entry[]
}

model time_entry {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  start_time     DateTime @db.Timestamp(6)
  end_time       DateTime @db.Timestamp(6)
  task_id        String   @db.Uuid
  team_member_id String   @db.Uuid
  created_at     DateTime @default(now()) @db.Timestamp(6)
  updated_at     DateTime @default(now()) @db.Timestamp(6)
  task           task     @relation(fields: [task_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user           user     @relation(fields: [team_member_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                                                                   String                   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                                                                String                   @unique @db.VarChar(255)
  firstName                                                            String?                  @db.VarChar(255)
  lastName                                                             String?                  @db.VarChar(255)
  roq_user_id                                                          String                   @db.VarChar(255)
  tenant_id                                                            String                   @db.VarChar(255)
  created_at                                                           DateTime                 @default(now()) @db.Timestamp(6)
  updated_at                                                           DateTime                 @default(now()) @db.Timestamp(6)
  company                                                              company[]
  performance_evaluation_performance_evaluation_hr_specialist_idTouser performance_evaluation[] @relation("performance_evaluation_hr_specialist_idTouser")
  performance_evaluation_performance_evaluation_team_member_idTouser   performance_evaluation[] @relation("performance_evaluation_team_member_idTouser")
  task_task_department_manager_idTouser                                task[]                   @relation("task_department_manager_idTouser")
  task_task_team_member_idTouser                                       task[]                   @relation("task_team_member_idTouser")
  time_entry                                                           time_entry[]
}
